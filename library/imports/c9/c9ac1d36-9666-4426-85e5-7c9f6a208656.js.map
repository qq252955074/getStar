{"version":3,"sources":["assets\\scripts\\Star.js"],"names":["cc","Class","Component","properties","pickRidus","onLoad","getPlayerDistance","playerPos","game","player","getPosition","dist","node","position","sub","mag","onPicked","spawnNewStar","gainScore","destroy","update","dt","opacityRatio","timer","startDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,SAAS,EAAC;AAhBF,GAHP;AAqBLC,EAAAA,MAAM,EAAC,kBAAU,CAEhB,CAvBI;AAwBLC,EAAAA,iBAAiB,EAAE,6BAAU;AACzB;AACA,QAAIC,SAAS,GAAG,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB,CAFyB,CAGzB;;AACA,QAAIC,IAAI,GAAG,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBP,SAAvB,EAAkCQ,GAAlC,EAAX;AACA,WAAOJ,IAAP;AACH,GA9BI;AA+BLK,EAAAA,QAAQ,EAAE,oBAAU;AAChB;AACA,SAAKR,IAAL,CAAUS,YAAV,GAFgB,CAGhB;;AACA,SAAKT,IAAL,CAAUU,SAAV;AACA,SAAKN,IAAL,CAAUO,OAAV;AACH,GArCI;AAsCLC,EAAAA,MAAM,EAAE,gBAASC,EAAT,EAAY;AAChB;AACA,QAAG,KAAKf,iBAAL,KAAyB,KAAKF,SAAjC,EAA2C;AACvC;AACA,WAAKY,QAAL;AACA;AACH;;AACD,QAAIM,YAAY,GAAG,IAAI,KAAKd,IAAL,CAAUe,KAAV,GAAgB,KAAKf,IAAL,CAAUgB,aAAjD;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,SAAKb,IAAL,CAAUc,OAAV,GAAoBD,UAAU,GAACE,IAAI,CAACC,KAAL,CAAWN,YAAY,IAAE,MAAMG,UAAR,CAAvB,CAA/B;AACH,GAhDI,CAoDL;;AApDK,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        pickRidus:0,\r\n    },\r\n    onLoad:function(){\r\n       \r\n    },\r\n    getPlayerDistance: function(){\r\n        //根据player节点位置判断距离\r\n        var playerPos = this.game.player.getPosition();\r\n        //根据两点位置计算两点之间的距离\r\n        var dist = this.node.position.sub(playerPos).mag();\r\n        return dist;\r\n    },\r\n    onPicked: function(){\r\n        //当星星被收集时,调用 Game脚本中的接口，生成一个星星\r\n        this.game.spawnNewStar();\r\n        //分数增加\r\n        this.game.gainScore();\r\n        this.node.destroy();\r\n    },\r\n    update: function(dt){\r\n        //判断每帧的距离是否小于搜集距离\r\n        if(this.getPlayerDistance()<this.pickRidus){\r\n            //调用收集行为\r\n            this.onPicked();\r\n            return;\r\n        }\r\n        var opacityRatio = 1 - this.game.timer/this.game.startDuration;\r\n        var minOpacity = 50;\r\n        this.node.opacity = minOpacity+Math.floor(opacityRatio*(255 - minOpacity));\r\n    },\r\n\r\n\r\n\r\n    // update (dt) {},\r\n});\r\n"]}